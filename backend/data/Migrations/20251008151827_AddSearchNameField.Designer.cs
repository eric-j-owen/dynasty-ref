// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251008151827_AddSearchNameField")]
    partial class AddSearchNameField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.Player", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnType("text");

                    b.PrimitiveCollection<string[]>("FantasyPositions")
                        .HasColumnType("text[]");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InjuryStatus")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("SearchFullName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Data.Models.PlayerStaging", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "player_id");

                    b.PrimitiveCollection<string[]>("FantasyPositions")
                        .HasColumnType("text[]")
                        .HasAnnotation("Relational:JsonPropertyName", "fantasy_positions");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "first_name");

                    b.Property<string>("InjuryStatus")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "injury_status");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "last_name");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "last_updated");

                    b.Property<string>("Position")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "position");

                    b.Property<string>("SearchFullName")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "search_full_name");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<string>("Team")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "team");

                    b.HasKey("PlayerId");

                    b.ToTable("PlayersStaging");
                });
#pragma warning restore 612, 618
        }
    }
}
